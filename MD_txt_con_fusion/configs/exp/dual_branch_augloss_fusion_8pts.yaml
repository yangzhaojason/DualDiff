# @package _global_
defaults:
  - /exp/224x400

task_id: dual_branch_augloss_fusion_8pts
runner:
  train_batch_size: 1
  learning_rate: 4e-5  # NOTE: we lower the lr for dual_branch
  # lr_warmup_steps: 5000
  # checkpointing_steps: 2000
  # validation_steps: 500
  bbox_add_ratio: 0.0 # !!!
  box_add_num: 0 # !!!
  enable_xformers_memory_efficient_attention: true # debug

# model:
#   controlnet:
#     # below two both vital to switch to custom conditioning embedder
#     map_embedder_cls: magicdrive.networks.map_embedder.ControlNetConditioningEmbedding
#     map_embedder_param:
#       block_out_channels: [16, 32, 96, 256]

official_ckpt: pretrained/SDv1.5mv-rawbox_2023-09-07_18-39_224x400
model_save_path: pretrained/SDv1.5mv-rawbox_2023-09-07_18-39_224x400
controlnet_seg_pretrained: sd-controlnet-seg #/diffusion_pytorch_model.bin
# resume_from_checkpoint: /opt/data/share/lihaoteng/aigc/MagicDrive_occ_token/magicdrive-log/SDv1.5mv-rawbox_2024-07-10_16-41_occ_fgfocus_nomaskloss/checkpoint-92000

save_model_only: false



# we use double controlnet, one with occ_bg config, another with occ_fg config
# here we set controlnet into a list [controlnet_bg, controlnet_fg], below configs align with this setting 
use_dual_controlnet: true
# using vectorized & discretized map as "bboxes_3d_input"
use_map_vec: [false,true]
use_map_vec_8pts: [none,true] # for use_map_vec
use_map_vec_40pts: [none,false] # for use_map_vec
model:
  bbox_view_shared: [false,true] # should be true for use_map_vec
  controlnet_dir: [controlnet_bg_1,controlnet_bg_2] # saving path
  controlnet:
    use_txt_con_fusion: true  # for both branch, enabling fusion
# we use occ3d here(only including fg)
use_occ_3d: [false,true]
use_occ_3d_fg: [none,true]  # for use_occ_3d
use_occ_3d_bg: [none,false] # for use_occ_3d

# using mask based auxiliary loss
use_aug_loss: true

use_trained_weights: true  # similar to resume_from_checkpoint but load .bin
trained_weights: [magicdrive-log/92000-occ_bg_augloss_fusion/controlnet,magicdrive-log/48000-occ_fg/controlnet]